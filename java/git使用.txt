
git init ------------------初始化

git add ***    -------------

git commit -m "********"    ----------

git remote add origin *******   --------

git push -u origin master  ---------  将本地的master分支推送到origin主机

git push -f origin master  ---------  回退版本后强制推送到到远端


git reset --hard  ****  ---------------   版本回退 ****代表回退的版本号

git log                -----------查看版本号

git --pretty=oneline   -----------查看简洁版版本号

git reset --hard HEAD--------当前的版本回退到上一个版本 如果要回退到上上个版本只需把HEAD^ 改成HEAD^^

git reflog ---------        要回退的版本




------------------------------------------------------------------------------------------==========================================================================================
冲突解决

1.git pull

更新代码，发现

error: Your local changes to the following files would be overwritten by merge:pom.xml

Please commit your changes or stash them before you merge.
这说明你的pom.xml与远程有冲突，你需要先提交本地的修改然后更新。

2.git add pom.xml

  git commit -m '冲突解决'

 提交本地的pom.xml文件，不进行推送远程

3.git pull

更新代码

Auto-merging pom.xml
CONFLICT (content): Merge conflict in pom.xml
Automatic merge failed; fix conflicts and then commit the result.

更新后你的本地分支上会出现 (develop|MERGING)类似这种标志

4.找到你本地的pom.xml文件，并打开

你会在文件中发现<<<<<<< HEAD ，=======  ，>>>>>>> ae9a0f6b7e42fda2ce9b14a21a7a03cfc5344d61

这种标记，<<<<<<< HEAD和=======中间的是你自己的代码，  =======  和>>>>>>>中间的是其他人修改的代码

自己确定保留那一部分代码，最后删除<<<<<<< HEAD ，=======  ，>>>>>>>这种标志

5.git add pom.xml

git commit -m '冲突解决结束'

再次将本地的pom.xml文件提交

6.git push

将解决冲突后的文件推送到远程


++++++++++++方法二：+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。
git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。
git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。
git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。

..........................................................

git pull 出现冲突后可以暂存本地修改git stash ,然后git pull 更新代码，git stash list 可查看暂存记录列表，释放本地暂存 git stash apply stash@{0} ，出现冲突文件，找到并解决，然后可以提交git add . 加入索引库，然后本地提交git commit -m '注释' 最后git push到远程
++++++++++++方法二：++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



==========================================================================================